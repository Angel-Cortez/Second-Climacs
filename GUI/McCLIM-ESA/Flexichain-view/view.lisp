(cl:in-package #:climacs-flexichain-view)

(defclass view ()
  ((%pane :initarg :pane :reader pane)
   (%buffer :initarg :buffer :reader buffer)
   (%timestamp :initform nil :accessor timestamp)
   (%lines :initarg :lines :reader lines)))

(defun update (view)
  (let ((index 0)
	(buffer (buffer view))
	(lines (lines view)))
    (flet ((delete-until (line)
	     (loop until (eq line (flexichain:element* lines index))
		   do (flexichain:delete* lines index))))
      (flet ((sync (line)
	       (delete-until line)
	       (incf index))
	     (skip (count)
	       (incf index count))
	     (modify (line)
	       (delete-until line)
	       (incf index))
	     (create (line)
	       (flexichain:insert* lines index line)
	       (incf index)))
      (setf (timestamp view)
	    (cluffer:update buffer (timestamp view)
			    #'sync #'skip #'modify #'create))))))
